function Services() {}
var services = new Services();


/* 
	*General
*/

Services.prototype.capcha = function ($form) {
	grecaptcha.ready(function () {
		grecaptcha.execute(google_site_key, {
			action: 'submit'
		}).then(function (token) {
			$($form + ' input[name="g-recapcha-response"]').remove();
			$($form).prepend('<input type="hidden" name="g-recapcha-response" value="' + token + '">');
		});
	});
}

Services.prototype.disable_forms = function ($form, $disable) {
	$loading = $($form).find('.sk-chase');
	$campos = $($form + ' .form-campo');

	if ($disable == true) {
		$loading.addClass('d-block');
		$campos.prop('disabled', true);
	} else {
		$campos.prop('disabled', false);
		$loading.removeClass('d-block');
	}
}

/* 
	*Contacto
*/

Services.prototype.form_contact = function ($form) {

	$($form).submit(function (event) {

		var vForm = $(this);
		event.preventDefault();

		if (vForm[0].checkValidity() === false) {
			event.preventDefault()
			event.stopPropagation()
		} else {
			$data = new FormData(this);
			services.process_form_contact($form, $data);
		}
		vForm.addClass('was-validated');
	});
}

Services.prototype.process_form_contact = function ($form, $data) {
	services.capcha($form);
	services.disable_forms($form, true);
	setTimeout(function () {
		$data.append("g-recapcha-response", $($form + ' input[name="g-recapcha-response"]').val());
		services.contacto_rests($form, $data);
	}, 1000);

}

Services.prototype.contacto_rests = function ($form, $data) {
	axios({
			method: 'post',
			url: service_contacto_rests,
			data: $data
		})
		.then(function (response) {

			var data= response.data;
			console.log(response);

			 switch (data.status) {
				case 200:
					$title="Mensaje enviado";
					$icon='success';
					break;
			 
				default:
					$title="Error";
					$icon='error'
					break;
			 }

			Swal.fire({
				icon:$icon,
				title: $title,
				text:data.message,
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
					$($form)[0].reset();
					$($form).removeClass('was-validated');

				}
			});
		})
		.catch($error => {
			
			var data=$error.response.data;
			console.log(data);
			$text = '';
			switch (data.status) {
				case "400":
					$text =data.msj;
					break;
				default:
					$text = 'No se pudo enviar el mensaje. Por favor intentelo mas tarde.';
					break;
			}

			Swal.fire({
				icon: 'error',
				title: 'Error',
				text: $text,
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
				}
			});

		});
}


/* 
	*Planes
*/

Services.prototype.form_plan = function ($form) {

	 
	$($form).submit(function (event) {

		var vForm = $(this);
		event.preventDefault();

		if (vForm[0].checkValidity() === false) {
			event.preventDefault()
			event.stopPropagation()
		} else {
			$data = new FormData(this);
			services.process_form_plan($form, $data);
		}
		vForm.addClass('was-validated');
	});
}


Services.prototype.process_form_plan = function ($form, $data) {
	services.capcha($form);
	services.disable_forms($form, true);
	setTimeout(function () {
		$data.append("g-recapcha-response", $($form + ' input[name="g-recapcha-response"]').val());
		services.contacto_plan($form, $data);
	}, 1000);
	
}


Services.prototype.contacto_plan = function ($form, $data) {
	axios({
			method: 'post',
			url: service_formulario_plan,
			data: $data
		})
		.then(function (response) {
			 
			console.log(response.data);
			Swal.fire({
				icon: 'success',
				title: 'Mensaje enviado',
				text: 'El agente de ventas ha sido contactado, en breve se estará comunicando, muchas gracias por el interés en CIO!',
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
					$($form)[0].reset();
					$($form).removeClass('was-validated');

				}
			});
		})
		.catch($error => {
			
			var data=$error.response.data;
			console.log(data);

			Swal.fire({
				icon: 'error',
				title: 'Error',
				text: 'No se pudo enviar el mensaje. Por favor intentelo mas tarde.',
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
				}
			});

		});
}



/* 
	*Prueba Gratis
*/

Services.prototype.form_prueba_gratis = function ($form) {
	$($form).submit(function (event) {
		var vForm = $(this);
		event.preventDefault();

		if (vForm[0].checkValidity() === false) {
			event.preventDefault()
			event.stopPropagation()
		} else {
			$data = new FormData(this);
			services.process_prueba_gratis($form, $data);
		}
		vForm.addClass('was-validated');
	});
}

Services.prototype.process_prueba_gratis = function ($form, $data) {
	services.capcha($form);
	services.disable_forms($form, true);
	setTimeout(function () {
		$data.append("g-recapcha-response", $($form + ' input[name="g-recapcha-response"]').val());
		services.probar_gratis($form, $data);
	}, 1000);
	
}

Services.prototype.probar_gratis = function ($form, $data) {

	 
	axios({
			method: 'post',
			url: service_formulario_prueba_gratis,
			data: $data
		})
		.then(function (response) {
			
			console.log("response");
			console.log(response);

			var data= response.data;
			switch (data.status) {
				case 200:
					$icon='success'
					$title='Mensaje enviado'
					break;
			
				default:
					$icon='error'
					$title='Error'
					break;
			}

			 
			 
			Swal.fire({
				icon: $icon,
				title: $title,
				text: data.message,
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
					$($form)[0].reset();
					$($form).removeClass('was-validated');

				}
			});
		})
		.catch($error => {
			console.log($error);
			Swal.fire({
				icon: 'error',
				title: 'Error',
				text: "No se pudo enviar su mensaje, por favor intentelo más tarde",
				allowOutsideClick: false,
				allowEscapeKey: false,
				allowEnterKey: false
			}).then((result) => {
				if (result.isConfirmed) {
					services.disable_forms($form, false);
				}
			});

		});
}
